version: '3.9'

services:
  web:
    build: .
    env_file:
      - .env
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    ports:
      - "8022:8000"
    depends_on:
      - faceid_db
      - redis
    restart: always

  faceid_db:
    image: postgis/postgis:latest
    container_name: faceid_db
    environment:
      POSTGRES_DB: faceid
      POSTGRES_USER: user_faceid
      POSTGRES_PASSWORD: password_faceid
    ports:
      - "5437:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user_faceid -d faceid"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6380:6379"
    restart: always

volumes:
  postgres_data:
  static_volume:
  media_volume:








#version: '3.9'
#
#services:
#  web:
#    build: .
#    container_name: ijara_backend-web
#    ports:
#      - "8022:8000"
#    depends_on:
#      - db
#      - redis
#    environment:
#      - DEBUG=1
#      - DJANGO_DB_HOST=db
#      - DJANGO_DB_PORT=5432
#      - DJANGO_DB_NAME=faceid
#      - DJANGO_DB_USER=faceid_user
#      - DJANGO_DB_PASSWORD=faceid_pass
#
#  db:
#    image: postgres:15
#    container_name: ijara_backend-db
#    environment:
#      POSTGRES_DB: faceid
#      POSTGRES_USER: faceid_user
#      POSTGRES_PASSWORD: faceid_pass
#    ports:
#      - "5440:5432"
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#
#  redis:
#    image: redis:alpine
#    container_name: ijara_backend-redis
#    ports:
#      - "6380:6379"
#
#volumes:
#  postgres_data:
